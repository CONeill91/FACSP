#Free variables

A, B : Agent
S : Server
na, nb : Nonce
SKey : Agent -> ServerKey
kab : SessionKey
InverseKeys = (SKey, SKey), (kab,kab)

#Processes

INITIATOR(A,na) knows SKey(A)
RESPONDER(B,S,nb) knows SKey(B)
SERVER(S,kab) knows SKey

#Protocol description

0.    -> A : B
1.  A -> B : na
2.  B -> S : {A, na, nb}{SKey(B)}
3a. S -> A : {B, kab, na, nb}{SKey(A)}
3b. S -> A : {A, kab}{SKey(B)} % enc
4a. A -> B : enc % {A, kab}{SKey(B)}
4b. A -> B : {nb}{kab}

#Specification

Secret(B, nb, [S,A])
Secret(S, kab, [A,B])
Agreement(B, A, [na])
Agreement(A, B, [na])

#Actual variables

Alice, Bob, Mallory : Agent
Sam : Server
Na, Nb : Nonce
Kab : SessionKey

InverseKeys = (Kab, Kab)

#Functions

symbolic SKey

#System

INITIATOR(Alice, Na)
RESPONDER(Bob, Sam, Nb)
SERVER(Sam, Kab)

#Intruder Information

Intruder = Mallory
IntruderKnowledge = {Alice, Bob, Mallory, Sam, SKey(Mallory)}
